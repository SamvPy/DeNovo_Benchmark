hydra:
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: RUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=RUN
    task:
    - mode=inference
    - serialized_model_path=/public/compomics3/Sam/denovo_checkpoints/GraphNovo/ckpt
    - dist=false
    - infer=optimal_path_inference
    - task=optimal_path
    - wandb.project=GraphNovo
    - wandb.name=PathSearcher
    - infer.beam_size=20
    - infer.testset=bacillus.10k
    - infer.output_file=/public/compomics3/Sam/test_data/testing_graphnovo/prediction/optimal_path/bacillus_beam20.csv
    - infer.data_dir=/public/compomics3/Sam/test_data/testing_graphnovo/graphnovo_data/overall
  job:
    name: main
    chdir: null
    override_dirname: dist=false,infer.beam_size=20,infer.data_dir=/public/compomics3/Sam/test_data/testing_graphnovo/graphnovo_data/overall,infer.output_file=/public/compomics3/Sam/test_data/testing_graphnovo/prediction/optimal_path/bacillus_beam20.csv,infer.testset=bacillus.10k,infer=optimal_path_inference,mode=inference,serialized_model_path=/public/compomics3/Sam/denovo_checkpoints/GraphNovo/ckpt,task=optimal_path,wandb.name=PathSearcher,wandb.project=GraphNovo
    id: ???
    num: ???
    config_name: config
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.1
    version_base: '1.3'
    cwd: /home/sam/DeNovo/source_code/GraphNovo
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/sam/DeNovo/source_code/GraphNovo/configs
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: /home/sam/DeNovo/source_code/GraphNovo/outputs/2024-06-20/14-34-29
    choices:
      infer: optimal_path_inference
      train: train
      decoder: light
      encoder: light
      preprocessing: all_graph
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
